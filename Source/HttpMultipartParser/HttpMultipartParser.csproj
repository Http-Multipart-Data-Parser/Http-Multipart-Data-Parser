<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net48;netstandard2.1</TargetFrameworks>
    <LangVersion>preview</LangVersion>
    <PlatformTarget>anycpu</PlatformTarget>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <OutputType>Library</OutputType>
    <Version>$(SemVer)</Version>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyOriginatorKeyFile>HttpMultipartParser.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>HttpMultipartParser</PackageId>
    <AssemblyName>HttpMultipartParser</AssemblyName>
    <AssemblyTitle>HttpMultipartParser</AssemblyTitle>
    <Authors>Jake Woods, Jeremie Desautels</Authors>
    <Company></Company>
    <Description>A C# Http Multipart/form-data parser that works correctly on binary data and very large files.</Description>
    <Summary>The Http Multipart Parser does it exactly what it claims on the tin: parses multipart/form-data. This particular parser is well suited to parsing large data from streams as it doesn't attempt to read the entire stream at once and produces a set of streams for file data.</Summary>
    <Copyright>Copyright Â© Jake Woods and contributors 2013 - Present</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/Http-Multipart-Data-Parser/Http-Multipart-Data-Parser</PackageProjectUrl>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageTags>http multipart parser form data</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.IO.RecyclableMemoryStream" Version="3.0.0" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118" PrivateAssets="All" />
    <PackageReference Include="System.Buffers" Version="4.5.1" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('net4')) ">
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release' ">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="$(SolutionDir)stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <PropertyGroup>
    <CodeAnalysisRuleSet>$(SolutionDir)StyleCopRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>

</Project>
